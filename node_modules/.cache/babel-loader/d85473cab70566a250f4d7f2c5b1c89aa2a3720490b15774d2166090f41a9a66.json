{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialAuthState = {\n  loggedIn: false,\n  role: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state, action) {\n      state.loggedIn = true;\n      state.role = action.payload;\n    },\n    logout(state, action) {\n      state.loggedIn = false;\n      state.role = action.payload;\n    }\n  }\n});\nconst initialCartState = {\n  cartList: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addToCart(state, action) {\n      console.log(action.payload);\n      state.cart = [...state.cartList, action.payload];\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    auth: authSlice.reducer,\n    cart: cartSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport const cartActions = cartSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","loggedIn","role","authSlice","name","initialState","reducers","login","state","action","payload","logout","initialCartState","cartList","cartSlice","addToCart","console","log","cart","store","reducer","auth","authActions","actions","cartActions"],"sources":["D:/Task1FE/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAuthState = { loggedIn: false, role: null };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.loggedIn = true;\r\n      state.role = action.payload;\r\n    },\r\n    logout(state, action) {\r\n      state.loggedIn = false;\r\n      state.role = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialCartState = {\r\n  cartList: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      console.log(action.payload);\r\n      state.cart = [...state.cartList, action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { auth: authSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport const cartActions = cartSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,gBAAgB,GAAG;EAAEC,QAAQ,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAK,CAAC;AAExD,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACP,QAAQ,GAAG,IAAI;MACrBO,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,MAAMA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACP,QAAQ,GAAG,KAAK;MACtBO,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAG;EACvBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEO,gBAAgB;EAC9BN,QAAQ,EAAE;IACRS,SAASA,CAACP,KAAK,EAAEC,MAAM,EAAE;MACvBO,OAAO,CAACC,GAAG,CAACR,MAAM,CAACC,OAAO,CAAC;MAC3BF,KAAK,CAACU,IAAI,GAAG,CAAC,GAAGV,KAAK,CAACK,QAAQ,EAAEJ,MAAM,CAACC,OAAO,CAAC;IAClD;EACF;AACF,CAAC,CAAC;AAEF,MAAMS,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IAAEC,IAAI,EAAElB,SAAS,CAACiB,OAAO;IAAEF,IAAI,EAAEJ,SAAS,CAACM;EAAQ;AAC9D,CAAC,CAAC;AAEF,OAAO,MAAME,WAAW,GAAGnB,SAAS,CAACoB,OAAO;AAC5C,OAAO,MAAMC,WAAW,GAAGV,SAAS,CAACS,OAAO;AAC5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}