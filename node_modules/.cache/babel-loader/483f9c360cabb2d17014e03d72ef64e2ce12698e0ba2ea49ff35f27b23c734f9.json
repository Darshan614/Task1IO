{"ast":null,"code":"let validatefield = (constraints, value) => {\n  console.log(\"in validate\");\n  if (constraints.required && value === \"\") {\n    return \"Required\";\n  }\n  if (constraints.minLength) {\n    if (constraints.minLength > value.length) {\n      return \"PLease provide atleast \" + constraints.minLength + \" characters.\";\n    }\n  }\n  if (constraints.maxLength) {\n    if (constraints.maxLength < value.length) {\n      return \"PLease provide atmost \" + constraints.maxLength + \" characters.\";\n    }\n  }\n  if (constraints.regexp) {\n    let pattern = constraints[\"regexp\"];\n    if (!pattern.test(value)) {\n      return \"Invalid value\";\n    }\n  }\n  if (constraints.minValue) {\n    if (constraints.minValue > value) {\n      return \"Value should be greater than \" + constraints.minValue;\n    }\n  }\n  if (constraints.maxValue) {\n    if (constraints.maxValue < value) {\n      return \"Value should be lesser than \" + constraints.maxValue;\n    }\n  }\n  /* eslint-disable */\n\n  if (constraints.email) {\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(value)) {\n      return \"Invalid Email\";\n    }\n  } else if (constraints.url) {\n    if (!/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g.test(value)) {\n      return \"Passwords mismatched\";\n    }\n  } else if (constraints.password) {\n    if (!/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(value)) {\n      return \"Password must have a capital letter, small letter, numerical value ,special character and must be 6 to 16 characters long.\";\n    }\n  }\n  if (constraints.matchWith) {\n    if (constraints.matchWith !== value) {\n      return \"Passwords mismatched\";\n    }\n  }\n  return \"valid\";\n};\nexport default validatefield;","map":{"version":3,"names":["validatefield","constraints","value","console","log","required","minLength","length","maxLength","regexp","pattern","test","minValue","maxValue","email","url","password","matchWith"],"sources":["D:/Task1FE/src/validator/validator.js"],"sourcesContent":["let validatefield = (constraints, value) => {\r\n  console.log(\"in validate\");\r\n  if (constraints.required && value === \"\") {\r\n    return \"Required\";\r\n  }\r\n  if (constraints.minLength) {\r\n    if (constraints.minLength > value.length) {\r\n      return \"PLease provide atleast \" + constraints.minLength + \" characters.\";\r\n    }\r\n  }\r\n  if (constraints.maxLength) {\r\n    if (constraints.maxLength < value.length) {\r\n      return \"PLease provide atmost \" + constraints.maxLength + \" characters.\";\r\n    }\r\n  }\r\n\r\n  if (constraints.regexp) {\r\n    let pattern = constraints[\"regexp\"];\r\n    if (!pattern.test(value)) {\r\n      return \"Invalid value\";\r\n    }\r\n  }\r\n  if (constraints.minValue) {\r\n    if (constraints.minValue > value) {\r\n      return \"Value should be greater than \" + constraints.minValue;\r\n    }\r\n  }\r\n  if (constraints.maxValue) {\r\n    if (constraints.maxValue < value) {\r\n      return \"Value should be lesser than \" + constraints.maxValue;\r\n    }\r\n  }\r\n  /* eslint-disable */\r\n\r\n  if (constraints.email) {\r\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(value)) {\r\n      return \"Invalid Email\";\r\n    }\r\n  } else if (constraints.url) {\r\n    if (\r\n      !/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g.test(\r\n        value\r\n      )\r\n    ) {\r\n      return \"Passwords mismatched\";\r\n    }\r\n  } else if (constraints.password) {\r\n    if (!/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(value)) {\r\n      return \"Password must have a capital letter, small letter, numerical value ,special character and must be 6 to 16 characters long.\";\r\n    }\r\n  }\r\n  if (constraints.matchWith) {\r\n    if (constraints.matchWith !== value) {\r\n      return \"Passwords mismatched\";\r\n    }\r\n  }\r\n  return \"valid\";\r\n};\r\n\r\nexport default validatefield;\r\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGA,CAACC,WAAW,EAAEC,KAAK,KAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,IAAIH,WAAW,CAACI,QAAQ,IAAIH,KAAK,KAAK,EAAE,EAAE;IACxC,OAAO,UAAU;EACnB;EACA,IAAID,WAAW,CAACK,SAAS,EAAE;IACzB,IAAIL,WAAW,CAACK,SAAS,GAAGJ,KAAK,CAACK,MAAM,EAAE;MACxC,OAAO,yBAAyB,GAAGN,WAAW,CAACK,SAAS,GAAG,cAAc;IAC3E;EACF;EACA,IAAIL,WAAW,CAACO,SAAS,EAAE;IACzB,IAAIP,WAAW,CAACO,SAAS,GAAGN,KAAK,CAACK,MAAM,EAAE;MACxC,OAAO,wBAAwB,GAAGN,WAAW,CAACO,SAAS,GAAG,cAAc;IAC1E;EACF;EAEA,IAAIP,WAAW,CAACQ,MAAM,EAAE;IACtB,IAAIC,OAAO,GAAGT,WAAW,CAAC,QAAQ,CAAC;IACnC,IAAI,CAACS,OAAO,CAACC,IAAI,CAACT,KAAK,CAAC,EAAE;MACxB,OAAO,eAAe;IACxB;EACF;EACA,IAAID,WAAW,CAACW,QAAQ,EAAE;IACxB,IAAIX,WAAW,CAACW,QAAQ,GAAGV,KAAK,EAAE;MAChC,OAAO,+BAA+B,GAAGD,WAAW,CAACW,QAAQ;IAC/D;EACF;EACA,IAAIX,WAAW,CAACY,QAAQ,EAAE;IACxB,IAAIZ,WAAW,CAACY,QAAQ,GAAGX,KAAK,EAAE;MAChC,OAAO,8BAA8B,GAAGD,WAAW,CAACY,QAAQ;IAC9D;EACF;EACA;;EAEA,IAAIZ,WAAW,CAACa,KAAK,EAAE;IACrB,IAAI,CAAC,kCAAkC,CAACH,IAAI,CAACT,KAAK,CAAC,EAAE;MACnD,OAAO,eAAe;IACxB;EACF,CAAC,MAAM,IAAID,WAAW,CAACc,GAAG,EAAE;IAC1B,IACE,CAAC,oGAAoG,CAACJ,IAAI,CACxGT,KAAK,CACN,EACD;MACA,OAAO,sBAAsB;IAC/B;EACF,CAAC,MAAM,IAAID,WAAW,CAACe,QAAQ,EAAE;IAC/B,IAAI,CAAC,wDAAwD,CAACL,IAAI,CAACT,KAAK,CAAC,EAAE;MACzE,OAAO,4HAA4H;IACrI;EACF;EACA,IAAID,WAAW,CAACgB,SAAS,EAAE;IACzB,IAAIhB,WAAW,CAACgB,SAAS,KAAKf,KAAK,EAAE;MACnC,OAAO,sBAAsB;IAC/B;EACF;EACA,OAAO,OAAO;AAChB,CAAC;AAED,eAAeF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}