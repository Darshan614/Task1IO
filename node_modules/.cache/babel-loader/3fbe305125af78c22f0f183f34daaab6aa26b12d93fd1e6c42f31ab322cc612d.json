{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task1FE\\\\src\\\\Components\\\\ForgetForm.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Authenticate.module.css\";\nimport { useState } from \"react\";\nimport Button from \"./UI/Button\";\nimport Title from \"./UI/Title\";\nimport Error from \"./UI/Error\";\nimport TextField from \"./UI/TextField\";\nimport validatefield from \"../validator/validator\";\nimport { useParams } from \"react-router-dom\";\nimport Modal from \"../Components/UI/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ForgetForm() {\n  _s();\n  const params = useParams();\n  const [showModal, setshowModal] = useState(false);\n  const [password, setpassword] = useState(\"\");\n  const [passwordValid, setpasswordValid] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const onPasswordChangeHandler = event => {\n    setpassword(event.target.value);\n    setpasswordValid(validatefield({\n      required: true,\n      password: true\n    }, event.target.value));\n  };\n  const onSubmitPassword = () => {\n    const url = \"http://localhost:8080/setPassword/\" + params.token;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: password\n      })\n    }).then(res => {\n      console.log(res.status);\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      if (data.message == \"Password reset successful\") {\n        setshowModal(true);\n      }\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.parent,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.box,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          title: \"Enter new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n          title: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          onChange: onPasswordChangeHandler,\n          req: true,\n          valid: passwordValid,\n          icon: \"lock-closed-outline\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmitPassword,\n          title: \"Submit Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Email Sent!\",\n      message: \"Check your email to reset password\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ForgetForm, \"2ZXgB2x5FYcdUS12roaR/lsG+lc=\", false, function () {\n  return [useParams];\n});\n_c = ForgetForm;\nexport default ForgetForm;\nvar _c;\n$RefreshReg$(_c, \"ForgetForm\");","map":{"version":3,"names":["classes","useState","Button","Title","Error","TextField","validatefield","useParams","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgetForm","_s","params","showModal","setshowModal","password","setpassword","passwordValid","setpasswordValid","error","setError","onPasswordChangeHandler","event","target","value","required","onSubmitPassword","url","token","fetch","method","headers","body","JSON","stringify","then","res","console","log","status","json","data","message","catch","err","children","className","parent","box","title","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","req","valid","icon","type","onClick","onClose","_c","$RefreshReg$"],"sources":["D:/Task1FE/src/Components/ForgetForm.js"],"sourcesContent":["import classes from \"./Authenticate.module.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"./UI/Button\";\r\nimport Title from \"./UI/Title\";\r\nimport Error from \"./UI/Error\";\r\nimport TextField from \"./UI/TextField\";\r\nimport validatefield from \"../validator/validator\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Modal from \"../Components/UI/Modal\";\r\n\r\nfunction ForgetForm() {\r\n  const params = useParams();\r\n  const [showModal, setshowModal] = useState(false);\r\n  const [password, setpassword] = useState(\"\");\r\n  const [passwordValid, setpasswordValid] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const onPasswordChangeHandler = (event) => {\r\n    setpassword(event.target.value);\r\n    setpasswordValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          password: true,\r\n        },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const onSubmitPassword = () => {\r\n    const url = \"http://localhost:8080/setPassword/\" + params.token;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.message == \"Password reset successful\") {\r\n          setshowModal(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(err);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.parent}>\r\n        <section className={classes.box}>\r\n          <Title title=\"Enter new password\" />\r\n          {error && <Error title={error} />}\r\n          <TextField\r\n            label=\"Password\"\r\n            onChange={onPasswordChangeHandler}\r\n            req={true}\r\n            valid={passwordValid}\r\n            icon=\"lock-closed-outline\"\r\n            type=\"password\"\r\n          />\r\n\r\n          <Button onClick={onSubmitPassword} title=\"Submit Password\" />\r\n        </section>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          title=\"Email Sent!\"\r\n          message=\"Check your email to reset password\"\r\n          onClick={onClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}